# Инкапсуляция заключается в сборе в одно место (класс) данных и методов для работы с ними
# и для предоставления пользователю публичного интерфейса (API)
# _ - знак того, что этот атрибут не предназначен для прямого использования,
# работа объекта не гарантируется, при использовании таких атрибутов
# инкапсуляция в python не подразумевает сокрытие данных, как в других языках
# __ - (private) под капотом преобразуется в object._Class__attribute это называется Name Mangling
# public - без подчёркиваний, значит метод публичный, можно использовать и менять метод
# protected - [_] значит не рекомендуется менять этот метод
# private - [__] значит не рекомендуется менять этот метод
# __something__ - это магический метод, когда двойное подчёркивание не только вначале названия метода, но ещё и в конце
# Публичный API(Интерфейс) - это договорённость, что все методы будут работать,
# а изменение внутренней реализации не гарантирует работу
# Совет: делать одно _ для внутренних атрибутов и реализаций, не перебарщивать с __ и сеттерами/геттерами


class Person:
    def __init__(self, first_name, last_name, age):
        self.first_name = first_name
        self.last_name = last_name
        self.__age = age

    # ниже сеттер
    # def set_age(self, age):
    #     if age < 1 or age > 120:
    #         raise ValueError(f'Age must be in range 1-120')
    #     self.__age = age
    # --------------------------------------------------------------------------
    # ниже геттер
    # def get_age(self, age):
    #     return self.__age

    def describe(self):
        print(f'I am {self.first_name} {self.last_name}, Im {self.__age} years old!')


if __name__ == '__main__':
    ivan = Person('Ivan', 'Ivanov', 20)
    ivan.describe()
    print(ivan._Person__age)
    ivan._Person__age = 50
    print(ivan._Person__age)
