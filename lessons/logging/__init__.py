# Минусы print
# - нет общего формата (дата)
# - не ясно какой модуль в каком месте написал информацию, насколько она важна
# - нужно включать/выключать, обязательно забудем удалить
# - нельзя гибко настроить куда писать (файл/консоль)
#
# Когда уместен print:в очень простых, маленьких приложениях, скриптах.
# Чем больше и сложнее приложение, тем важнее использовать специальные инструменты логирования
#
FORMAT = '%(asctime)s : %(name)s : %(levelname)s : %(message)s'
#
# DIWEC = DEBUG < INFO < WARNING < ERROR < CRITICAL
# DEBUG - самая подробная информация, нужна только разработчику и только для отладки, например значения переменных,
# какие данные получены и т.д.
# INFO - информационное сообщение, как подтверждение работы, например запуск сервиса
# WARNING - ещё не ошибка, но уже надо посмотреть - мало места на диске, мало памяти, много созданных объектов и т.д.
# ERROR - приложение ещё работает и может работать, но что-то пошло не так
# CRITICAL - приложение не может работать дальше
#
# logger = gerLogger(__name__) - принятый подход для логирования с именем модуля
# логгеры с именами наследуют настройки от root, но могут быть настроены иначе
# Нельзя использовать f-строки, нужно писать, как сделано ниже
# logger.debug('Get expression %s', exp) - для обратной совместимости используется старый формат через %
